* Solver

* Generator
** TODO Non-unique puzzles

* Hints
** TODO Figure out how to turn game histories into pattern times
** TODO Fix analyzer to not apply sets & overlaps until they're the cheapest insight available

** Getting games with history from a sqlite db into a tsv file:
sqlite3 phone-2012-07-08.db <<END
.mode tabs
.output games-phone-2012-07-08.tsv
select p.puzzle, g.history from puzzle p, game g where g.puzzleId = p._id and g.gameState >= 3;
END

* Game
** TODO Rename getState to... what?

* App

** App/UI cleanups
*** TODO Rewrite prefs activity to use new APIs
    - All the prefs we need:
      - google account
      - improper puzzles OK
*** TODO Add Help activity
    - Add to standard action overflow
    - Make sure it's available from every other activity, even prefs
    - Make it contextual
*** TODO Acknowledge icons from the Noun Project in Help/About
    - <a href="http://thenounproject.com/noun/play/#icon-No6506" target="_blank">Play</a> designed by <a href="http://thenounproject.com/mateozlatar" target="_blank">Mateo Zlatar</a> from The Noun Project
      - for play and reverse
    - <a href="http://thenounproject.com/noun/pause/#icon-No6413" target="_blank">Pause</a> designed by <a href="http://thenounproject.com/mateozlatar" target="_blank">Mateo Zlatar</a> from The Noun Project
      - for pause
    - <a href="http://thenounproject.com/noun/arrow/#icon-No6489" target="_blank">Arrow</a> designed by <a href="http://thenounproject.com/mateozlatar" target="_blank">Mateo Zlatar</a> from The Noun Project
      - for undo, redo, undo to start, redo to end
    - <a href="http://thenounproject.com/noun/loop/#icon-No2840" target="_blank">Loop</a> designed by <a href="http://thenounproject.com/somerandomdude" target="_blank">P.J. Onori</a> from The Noun Project
      - for resume replay
    - http://thenounproject.com/noun/pin/#icon-No1490 by http://thenounproject.com/brokate KB
      - pin: for apply
    - http://thenounproject.com/noun/trail/#icon-No523 by unknown designer, 1982
      - trail
    - http://thenounproject.com/noun/wipe/#icon-No3626 by http://thenounproject.com/Gatada Johan H. W. Basberg
      - wipe: for clear
    - http://thenounproject.com/using-symbols/
    - for menu/action icons: 192px, 144px "optical square"; scale down to 64, 48,
      32; 60% opacity for enabled, 30% for disabled
*** TODO Figure out why the progress indicator stops
    - Profile
*** TODO Give visual indication when try to set an unsettable location

** Publishing the app
*** TODO Make other graphics for play store

** Improper (non-unique) puzzles
*** TODO Experiment with improper puzzles
    - beef up solver to return intersection of solutions
    - beef up generator to return improper puzzles if asked
    - play a bunch of these puzzles and see how they are: what's a good max number of solutions?
*** TODO Fix replay to handle improper puzzles
*** TODO Add a preference for allowing improper puzzles to be shown
*** TODO Return a flag for properness in generator's puzzle properties
*** TODO Handle completion of potentially improper puzzles
    - by asking whether it was unique (?)

** Cross-installation work
*** TODO Add puzzle properties to the database, remove from element
    - Kill the distinction between source and generator params, and just have puzzle properties
*** TODO Use backup service to keep basic prefs, like generation params
    - What would we use this for?  The user ID?
*** TODO Write an appengine app that gathers data from the android app
    - use GUID to identify the installation
    - allow login using Google ID to keep different installations from generating the same puzzles
    - will android tell us which Google ID installed the app?
    - when the app is slightly off the ground, sign up for Cloud Endpoints at http://endpoints-trusted-tester.appspot.com/

** Replay cleanups
*** TODO Fix replay layout on squarish screens
    - controls are being pushed below the bottom
    - hmm, today it isn't happening?
*** TODO Move undo/redo back into the controls ribbon for replay
*** TODO Try making selection color darker
*** TODO Try not minimizing disproofs until they're selected
*** TODO Why does the first trail in puzzle 14 switch errors?
*** TODO Automatically pause the replay on switch of trail, just after the move
    - Or, rethink this.  Not clear it would be helpful.
*** TODO Bug: analysis not being interrupted
    - No longer seeing this?
*** TODO Clearing the present insight should clear the selected location too
    - should it also clear the error displayed?
    - or possibly everything but the nub of the error?
*** TODO Think about animation of insight display
    - for complex implications, this could help the visualization

** List view ideas
*** TODO Add a count to the list spinner: #puzzles in collection
*** TODO Handle the importing of collections of puzzles
    - Add an activity that's triggered by .sdm files
    - Change the way we set up new games: look for game-less puzzles and queue one
    - Still want to generate new puzzles: add a pref for how often to do this, as
      a number between 0 and 1 (probably with 4-5 discrete choices: never,
      occasionally, etc)
*** TODO Consider supporting other selection-based operations on the list: deletion, exporting


* App engine app
** API from phone
   - Send installation info:
     - installation ID
     - phone model info
     - email address (opt)
     - generation stream number
   -> return generation stream number (opt)
   - Send game history:
     - installation ID
     - game ID -- why not?
     - puzzle
     - generation params
     - source
     - history -- log and drop if history's > say 50k
     - stopTime
   - Send vote:
     - installation ID
     - puzzle
     - vote
   - Get puzzle stats

** Schema
   - Installation: root, key = installation ID
     - optional email address (with index)
     - opaque ID with index (generated)
     - phone model, generation stream number
     - PuzzleHistory: child, key = puzzle string
       - index on puzzle string
       - source, generation params
       - contains all game histories (up to 20 or something)
         - each with history string, elapsed time, #moves, #trails,
           solved/gave up flag, game ID from phone, stopTime
         - also original installation ID, if not this one? if possible, we
           should group all interactions with a puzzle under just one of the
           user's installations, the one that solved it first
   - Puzzle: root, key = puzzle string
     - contains generation params if applicable
     - contains puzzle sources and installation IDs they came from
     - contains summary of stats on this puzzle:
       - how many played
       - how many won on first attempt
       - avg elapsed time
       - avg #moves
       - avg #trails
       - perhaps distributions of above
   - User: root, key = email address
     - opaque ID with index (generated)
     - contains list of installation IDs

** The web app
   - sample puzzles?
   - stats? num puzzles? num installations? num users? rates of change?
   - for logged-in users, info about their stuff

** Constraints
   - The installation ID and email address are secret--can't let them leak out of the app engine app
   - So we need alternative IDs that we expose and index on
   - Is there an encryption service?  Is it possible to have params not visible via source?

* Math
** Pathological grids
   - How bad can they get?
*** TODO Solve one in the debugger, see what's going on

** Canonical grids
   - How to compare two grids for equivalence?
   - Possible permutations that preserve constraints:
     - transposition
     - permutation of numerals
     - permutation of block-rows or block-columns
     - permutation of rows within a block-row or columns within a block-column
     - rotation (can it be expressed by the others? -- yes)
*** TODO Re-read the "how many sudokus" paper
    - Canonical grid?

* References
** J. F. Crook: A Pencil-and-Paper Algorithm for Solving Sudoku Puzzles
   - http://www.ams.org/notices/200904/tx090400460p.pdf
   - The trails approach, essentially, including different colors
