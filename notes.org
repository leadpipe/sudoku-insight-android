* Solver
** DONE Replace units & all strategies with various takes on locations
** DONE Generate stats, summarize, compare
** DONE Separate worklist processing from the iterator
** DONE Go with the shuffle variant of the solver
** DONE Experiment with different params for fast solver

* Generator
** DONE Investigate solving an empty grid: how slow can it get?
   - A: not very
** TODO Put together a generator that keeps adding givens until it finds a unique solution
** TODO Play with subsequently subtracting givens
** TODO What about non-unique puzzles?

* Hints
** TODO Start work on basic visual strategies

* App
** TODO Write basic grid display
** TODO Write basic gameplay

* Math
** Pathological grids
   - How bad can they get?
*** TODO Solve one in the debugger, see what's going on

** Canonical grids
   - How to compare two grids for equivalence?
   - Possible permutations that preserve constraints:
     - transposition
     - permutation of numerals
     - permutation of block-rows or block-columns
     - permutation of rows within a block-row or columns within a block-column
     - rotation (can it be expressed by the others? -- yes)
*** TODO Re-read the "how many sudokus" paper
    - Canonical grid?
